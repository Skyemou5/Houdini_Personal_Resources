<?xml version="1.0" encoding="UTF-8"?>

<!--
-->

<mainMenu>
  <!-- menuDocument can only contain 1 menu element, whose id is 
         implicitly "root_menu"
      -->
  <menu>

    <!-- Set external editor -->

    <addScriptItem id="set_external_editor">
      <label>Set External Text Editor</label>
      <parent>preferences_submenu</parent>
      <insertAtIndex>26</insertAtIndex>
      <scriptCode>
        <![CDATA[
from HoudiniExprEditor import ParmWatcher
from imp import reload

reload(ParmWatcher)

ParmWatcher.set_external_editor()]]>
      </scriptCode>
    </addScriptItem>

    <!-- Open session module source watcher -->

    <addScriptItem id="external_python_source_editor">
      <label>External Python Source Editor</label>
      <parent>windows_menu</parent>
      <insertAtIndex>8</insertAtIndex>
      <context>
        <expression>
          <![CDATA[
try:
  from HoudiniExprEditor import ParmWatcher
  return True
except Exception as e:
  return False]]>
        </expression>
      </context>
      <scriptCode>
        <![CDATA[
from HoudiniExprEditor import ParmWatcher
from imp import reload

ParmWatcher.add_watcher("__temp__python_source_editor", type_="__temp__python_source_editor")]]>
      </scriptCode>
    </addScriptItem>


  </menu>

  <menuBar>


    <!-- An example of how to add a new submenu at the beginning of the 
         window menu. 
    -->
    <subMenu id="file_menu">
	<!--<insertAtIndex>3</insertAtIndex>-->
	
	<subMenu id="crash_recovery">
      <label>Crash Recovery</label>
	  <insertAtIndex>3</insertAtIndex>

     <scriptItem id="open_crashfile">
        <label>Open Crashfile</label>
        
        <scriptCode>
        <![CDATA[
import restore_backup
from imp import reload

reload(restore_backup)
restore_backup.recoverFile()
]]>
      </scriptCode>
      </scriptItem>
	  
	  <scriptItem id="open_crashdirectory">
        <label>Open Crash Directory</label>
        
        <scriptCode>
        <![CDATA[
file = hou.ui.selectFile(start_directory="$TEMP/", title="Select a file to open", collapse_sequences=False, file_type=hou.fileType.Hip, pattern=None, default_value=None, multiple_select=False, image_chooser=False, chooser_mode=hou.fileChooserMode.Read, width=0, height=0)
if file != "":
  hou.hipFile.load(file, suppress_save_prompt=False, ignore_load_warnings=False)]]>
      </scriptCode>
      </scriptItem>

	</subMenu>
    </subMenu>

    <subMenu id="assets_menu">

     <scriptItem id="check_tool_versions">
        <label>Check Asset Versions in Scene</label>
        <insertAtIndex>10</insertAtIndex>

        <scriptCode>
        <![CDATA[
LabsNodeInstances = [x for x in hou.node("/").allSubChildren() if x.type().nameComponents()[1] == "labs"] 
for node in LabsNodeInstances:
  if node.type().definition().nodeType().name() != hou.nodeType(node.type().definition().nodeTypeCategory(), node.type().definition().nodeTypeName()).namespaceOrder()[0]:
    print ("Warning... Node instance is using older definition: ", node.path())
]]>
      </scriptCode>
      </scriptItem>


    </subMenu>

    <subMenu id="help_menu">

     <scriptItem id="reset_viewport">
        <label>Reset Viewport</label>
        <insertAtIndex>5</insertAtIndex>

        <scriptCode>
        <![CDATA[
import reset_viewport
from imp import reload

reload(reset_viewport)
reset_viewport.ResetViewport()]]>
      </scriptCode>
      </scriptItem>

      <scriptItem id="quick_tip">
        <label>Quick Tip!</label>
        <insertAtIndex>9</insertAtIndex>

        <scriptCode>
        <![CDATA[
import quicktip
from imp import reload

reload(quicktip)
quicktip.ShowQuickTip()]]>
      </scriptCode>
      </scriptItem>


    </subMenu>


  </menuBar>


</mainMenu>